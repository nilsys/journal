<?php
/**
 * Created by PhpStorm.
 * User: xuant
 * Date: 10/2/2018
 * Time: 9:08 PM
 */

namespace app\models;
use Yii;
use yii\base\ErrorException;
use yii\base\Model;
use yii\db\Exception;
use yii\helpers\Inflector;
use app\models\Post;
use yii\web\UploadedFile;
use app\models\ServicePrice;


class AddEditor extends Model
{

    public $upload_file_editor;
    public $skill;

    public function rules()
    {
        //return parent::rules(); // TODO: Change the autogenerated stub
        $rules = [
            [['upload_file_editor','skill'],'required'],
            [['upload_file_editor'],'required','message'=>"can't be blank."],
            [['upload_file_editor'], 'safe'],
            [['upload_file_editor'],'file','extensions' => ['doc','docx']],
         ];
         return array_merge(parent::rules(),$rules);

    }
    public function attributeLabels()
    {
        return [

        ];
    }


    public function UploadFile_Editor($id_user)
    {
        if ($this->upload_file_editor) {
            $randomString = Yii::$app->getSecurity()->generateRandomString(20);
            $file = $randomString . '.' . $this->upload_file_editor->extension;
            if ($this->upload_file_editor->saveAs('upload_file_info_editor/' . $file)) {
                $user_saef = User::findIdentity($id_user);
                $editor = new Editor();
                if ($user_saef) {
                    $user_saef->Role = 3;
                    $editor->Id_User = $id_user;
                    $editor->File_Info_Editor = $file;
                    $editor->Chuyen_Nganh = $this->skill;
                    if ($editor->save() && $user_saef->save()) {
                        return true;
                    }
                }
                else
                {
                    $this->addError('myFile', 'Unable to save the uploaded file');
                }
            } else {
                $this->addError('myFile', 'Unable to save the uploaded file');
            }
        }
        return false;
    }





}
