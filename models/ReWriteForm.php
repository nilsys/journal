<?php
/**
 * Created by PhpStorm.
 * User: xuant
 * Date: 10/2/2018
 * Time: 9:08 PM
 */

namespace app\models;
use Yii;
use yii\base\ErrorException;
use yii\base\Model;
use yii\db\Exception;
use yii\helpers\Inflector;
use app\models\Post;
use yii\web\UploadedFile;
use app\models\ServicePrice;


class ReWriteForm extends Model
{
    public $upload_file_rewrite;
    public $id_editor;
    public $description;
    public $select_rewrite;
    public $file;
    public $page_number = 0;
    public $total_prices = 0;
    public $Token_Rewrite;

    public function rules()
    {
        //return parent::rules(); // TODO: Change the autogenerated stub
        $rules = [
            [['upload_file_rewrite'],'required','message'=>"can't be blank."],
            [['upload_file_rewrite'], 'safe'],
            [['upload_file_rewrite'],'file','extensions' => ['doc','docx']],
            [['id_editor'],'integer'],
            [['select_rewrite'],'integer']
         ];
         return array_merge(parent::rules(),$rules);

    }
    public function attributeLabels()
    {
        return [
            'id_editor'=>'ID',
        ];
    }
    public function SaveToTmpPost($old_post)
    {
        $tmp_post = new TmpPost();
        $send_mail = new SendMail();
            $upload_file = new UploadFile();
            $this->page_number = $upload_file->PageCount_DOCX($this->upload_file_rewrite);
            $tmp_post->Id_Author = $old_post->Id_Author;
            $tmp_post->Type_of_services = $old_post->Type_of_services;
            $tmp_post->Type_of_paper = $old_post->Type_of_paper	;
            $tmp_post->Type_of_paper = $old_post->Type_of_paper	;
            $tmp_post->Subject_area = $old_post->Subject_area	;
            $tmp_post->Type_of_currency = $old_post->Type_of_currency;
            $tmp_post->File_Name = $upload_file->UploadFileOrder($this->upload_file_rewrite);
            $tmp_post->Topic = $old_post->Topic	;
            $tmp_post->PageNumbers = $this->page_number;
            $tmp_post->Date_Create = date('Y-m-d H:i:s');
            $tmp_post->Day = $old_post->Day;
            $tmp_post->Deadline = date('Y-m-d H:i:s',strtotime("+".$old_post->Day."days"));
            //Yii::$app->getSecurity()->generateRandomKey(10);

            $tmp_post->Decription = $this->description?$this->description:$old_post->Decription;
            $this->Process_Price_Oder($old_post);
            $tmp_post->Price = $this->total_prices;
            $tmp_post->Status = 'New';
            $tmp_post->Status_Rewrite = 1;
            $tmp_post->Id_Old_Post = $old_post->id;
            $this->Token_Rewrite = Yii::$app->getSecurity()->generateRandomString(20);
            $tmp_post->Token_Rewrite = $this->Token_Rewrite;
            if ($this->select_rewrite == 1) {
                $tmp_post->Id_Editor = $old_post->Id_Editor;
            }
            else
            {
                $send_mail->SendMail($this->id_editor,'requestorder-html','requestorder-text','Order');
                $tmp_post->Id_Editor = $this->id_editor;
            }
            if ($tmp_post->save())
            {
                $send_mail->SendMail(Yii::$app->user->identity->getId(),'ordercompleted-html','ordercompleted-text','Order completed');
                return true;
            }
            return false;
    }
    public function SavePost($tmp_post)
    {
        $post = new Post();
        $post->Id_Author = $tmp_post->Id_Author;
        $post->Type_of_services = $tmp_post->Type_of_services;
        $post->Type_of_paper = $tmp_post->Type_of_paper;
        $post->Subject_area = $tmp_post->Subject_area;
        $post->Type_of_currency = $tmp_post->Type_of_currency;
        $post->Writer_Level = $tmp_post->Writer_Level;
        $post->Customer_Service = $tmp_post->Customer_Service;
        $post->File_Name = $tmp_post->File_Name;
        $post->Topic = $tmp_post->Topic;
        $post->PageNumbers = $tmp_post->PageNumbers;
        $post->Date_Create = $tmp_post->Date_Create;
        $post->Day = $tmp_post->Day;
        $post->Deadline = $tmp_post->Deadline;
        $post->Status = $tmp_post->Status;
        $post->Token_Order = $tmp_post->Token_Order;
        $post->Order_Code = $tmp_post->Order_Code;
        $post->Status_Order = $tmp_post->Status_Order;
        $post->Payment_Method = $tmp_post->Payment_Method;
        $post->Id_Editor = $tmp_post->Id_Editor;
        $post->Decription = $tmp_post->Decription;
        $post->Price = $tmp_post->Price;
        $post->Status_Rewrite = $tmp_post->Status_Rewrite;
        $post->Id_Old_Post = $tmp_post->Id_Old_Post;
        if ($post->save())
        {
            return true;
        }
        return false;
    }

     function Process_Price_Oder($old_post){
        $price_type_of_service = (ServicePrice::findOne($old_post->Type_of_services))->Price_USA;
        $price_type_of_paper = (ServicePrice::findOne($old_post->Type_of_paper))->Price_USA;
        $price_type_of_subject_area = (ServicePrice::findOne($old_post->Subject_area))->Price_USA;
        //$price_type_of_writer = (ServicePrice::findOne($this->Type_of_currency))->Price_USA;
        $price_urgency = (ServicePrice::find()->where(['Name_Service_Price'=>$old_post->Day])->limit(1)->one())->Price_USA;
        $price_perpage_file = $this->page_number *(ServicePrice::findOne('29'))->Price_USA;
        $total_price = $price_type_of_service + $price_type_of_paper+$price_type_of_subject_area + $price_urgency+$price_perpage_file;
        $price_writer_level = ($total_price *(ServicePrice::findOne($old_post->Writer_Level))->Price_USA)/100;
        $price_customer_service = ($total_price*(ServicePrice::findOne($old_post->Customer_Service))->Price_USA)/100;
        $prices_order = ($total_price+$price_writer_level + $price_customer_service);
        if ($old_post->Type_of_currency == 30){
            $this->total_prices = $prices_order;
            return true;
            //$this->id_type_of_currency = 'usd';
        }else if ($this->Type_of_currency == 31){
            $this->total_prices = $this->prices_order * ServicePrice::findAll(['Id_Service'=>'11','Name_Service_Price'=>'VND'])[0]->Price_VN;
            //$this->id_type_of_currency = 'vnd';
            return true;
        }
        return false;
    }

}
